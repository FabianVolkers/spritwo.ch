name: Google Calendar Sync and Update Target Date

on:
  schedule:
    - cron: '0 * * * *' # Run every hour
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest

    outputs:
      json_updated: ${{ steps.commit_changes.outputs.json_updated }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: main
        fetch-depth: 0
        token: ${{ secrets.PAT }}

    - name: Create and checkout new branch
      run: |
        git checkout -b calendar-sync-update

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client pytz

    - name: Fetch Google Calendar events and save to JSON
      env:
        GOOGLE_CALENDAR_ID: ${{ secrets.GOOGLE_CALENDAR_ID }}
        GOOGLE_SERVICE_ACCOUNT_KEY: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
      run: |
        echo "$GOOGLE_SERVICE_ACCOUNT_KEY" > service_account_key.json
        python .github/workflow-helpers/fetch_calendar_events.py

    - name: Commit and push changes
      id: commit_changes
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "FabianVolkers@users.noreply.github.com"
        git add .github/workflow-helpers/calendar_events.json
        git commit -m "Update calendar_events.json with latest events"
        JSON_UPDATED=$?
        echo "::set-output name=json_updated::$JSON_UPDATED"
        git push origin calendar-sync-update || exit 0

  update_target_date:
    if: ${{ needs.sync.outputs.json_updated == '0' }}
    needs: sync
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: calendar-sync-update
        fetch-depth: 0
        token: ${{ secrets.PAT }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
        python -m pip install --upgrade pip
        pip install pytz

    - name: Update target date in index.markdown
      run: |
        python .github/workflow-helpers/update_target_date.py

    - name: Commit and push changes
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "FabianVolkers@users.noreply.github.com"
        git add index.markdown
        git commit -m "Update target_date in index.markdown" || exit 0
        git push origin calendar-sync-update

    - name: Create pull request
      id: create_pr
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        pr_id=$(curl -s -X POST -H "Accept: application/vnd.github+json" -H "Authorization: token $GH_TOKEN" "https://api.github.com/repos/${{ github.repository }}/pulls" -d '{"title":"Update target_date in index.markdown","head":"calendar-sync-update","base":"main","maintainer_can_modify": true}' | jq '.number')
        echo "::set-output name=pr_id::$pr_id"

    - name: Approve pull request
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        pr_id=${{ steps.create_pr.outputs.pr_id }}
        curl -s -X POST -H "Accept: application/vnd.github+json" -H "Authorization: token $GH_TOKEN" "https://api.github.com/repos/${{ github.repository }}/pulls/$pr_id/reviews" -d '{"event":"APPROVE"}'

    - name: Merge pull request
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        pr_id=${{ steps.create_pr.outputs.pr_id }}
        curl -s -X PUT -H "Accept: application/vnd.github+json" -H "Authorization: token $GH_TOKEN" "https://api.github.com/repos/${{ github.repository }}/pulls/$pr_id/merge"

    - name: Delete calendar-sync-update branch
      run: |
        git push origin --delete calendar-sync-update

